import React, { useState, useEffect, useRef } from 'react';
import { useDemoContext } from '../context/DemoContext';

const KnowledgeBaseEvaluation = () => {
  const { state, dispatch, ACTION_TYPES } = useDemoContext();
  const [activeTab, setActiveTab] = useState('overview');
  const [testQuery, setTestQuery] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);
  const [testResponse, setTestResponse] = useState(null);
  const [sampleQueries, setSampleQueries] = useState([]);
  const messagesEndRef = useRef(null);
  
  // Scroll to bottom when test response changes
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [testResponse]);
  
  // Set sample queries based on the selected knowledge base
  useEffect(() => {
    if (state.selectedKnowledgeBase) {
      let queries = [];
      
      if (state.selectedKnowledgeBase.category === 'Healthcare') {
        queries = [
          "What's the standard protocol for patient intake?",
          "How do we handle insurance verification?",
          "What documentation is required for new patients?",
          "What's our process for prescription refills?",
        ];
      } else if (state.selectedKnowledgeBase.category === 'Legal') {
        queries = [
          "What's the process for contract review?",
          "How do we handle client confidentiality?",
          "What are the document retention requirements?",
          "What's our policy on conflicts of interest?",
        ];
      } else if (state.selectedKnowledgeBase.category === 'Finance') {
        queries = [
          "What's our investment risk assessment process?",
          "How do we handle client onboarding?",
          "What documentation is required for retirement planning?",
          "What's our policy on fee structures?",
        ];
      } else {
        queries = [
          "What are the main features of this product?",
          "How does the support process work?",
          "What documentation is available?",
          "How do I get started?",
        ];
      }
      
      setSampleQueries(queries);
    }
  }, [state.selectedKnowledgeBase]);
  
  // Handle test query submission
  const handleSubmitQuery = (e) => {
    e.preventDefault();
    
    if (!testQuery.trim() || isProcessing) return;
    
    setIsProcessing(true);
    
    // Simulate AI response delay
    setTimeout(() => {
      // Generate a mock response based on the query and knowledge base
      const response = generateMockResponse(testQuery, state.selectedKnowledgeBase);
      setTestResponse(response);
      setIsProcessing(false);
    }, 1500);
  };
  
  // Generate a mock AI response
  const generateMockResponse = (query, knowledgeBase) => {
    // Build response based on knowledge base category
    let responseText = '';
    let sourceDocs = [];
    
    if (knowledgeBase.category === 'Healthcare') {
      responseText = "Based on our healthcare protocols, this process involves three main steps: initial assessment, documentation in the electronic health record, and follow-up planning. The initial assessment should follow the standardized questionnaire found in the Clinical Guidelines manual. All information must be documented according to HIPAA compliance standards, with particular attention to the verification steps outlined in section 3.2 of our Patient Care handbook.";
      sourceDocs = [
        { title: "Clinical Guidelines (2023)", section: "Patient Protocols", relevance: 0.92 },
        { title: "Patient Care Handbook", section: "Section 3.2: Documentation Standards", relevance: 0.87 },
        { title: "HIPAA Compliance Manual", section: "Patient Data Handling", relevance: 0.79 },
      ];
    } else if (knowledgeBase.category === 'Legal') {
      responseText = "According to our legal practice guidelines, this process requires careful consideration of jurisdictional requirements. The procedure follows the framework established in the Legal Practice Manual, with specific attention to documentation requirements outlined in section 4.3. All actions must be documented with appropriate client communication as specified in our Client Communication Protocol, with specific attention to confidentiality standards referenced in the Ethics Guidelines.";
      sourceDocs = [
        { title: "Legal Practice Manual (2023)", section: "Procedural Guidelines", relevance: 0.94 },
        { title: "Client Communication Protocol", section: "Documentation Requirements", relevance: 0.85 },
        { title: "Ethics Guidelines", section: "Confidentiality Standards", relevance: 0.81 },
      ];
    } else if (knowledgeBase.category === 'Finance') {
      responseText = "Based on our financial advisory standards, this process follows our established Investment Policy Framework. The approach begins with risk assessment as outlined in section 2.1 of our Client Advisory Manual, followed by portfolio construction according to the asset allocation models in our Investment Committee Guidelines. All recommendations must be documented according to the compliance standards in the Regulatory Compliance Handbook, with particular attention to the disclosure requirements.";
      sourceDocs = [
        { title: "Investment Policy Framework (2023)", section: "Risk Assessment Protocol", relevance: 0.93 },
        { title: "Client Advisory Manual", section: "Section 2.1: Client Profiling", relevance: 0.86 },
        { title: "Regulatory Compliance Handbook", section: "Disclosure Requirements", relevance: 0.78 },
      ];
    } else {
      responseText = "According to our knowledge base, this process involves several key steps as outlined in our Standard Operating Procedures. The first step is to review the requirements document, followed by implementation according to the guidelines in section 3.4 of our Process Manual. All activities should be documented according to the standards in our Documentation Guidelines, with particular attention to the quality assurance checkpoints.";
      sourceDocs = [
        { title: "Standard Operating Procedures (2023)", section: "Process Overview", relevance: 0.91 },
        { title: "Process Manual", section: "Section 3.4: Implementation Guidelines", relevance: 0.84 },
        { title: "Documentation Guidelines", section: "Quality Assurance Standards", relevance: 0.77 },
      ];
    }
    
    return {
      text: responseText,
      sourceDocs,
      metadata: {
        responseTime: `${(Math.random() * 0.5 + 0.2).toFixed(2)}s`,
        confidence: Math.random() * 0.15 + 0.85, // 85-100% confidence
        tokensUsed: Math.floor(Math.random() * 200) + 300,
      }
    };
  };
  
  // Handle sample query selection
  const handleSampleQuery = (query) => {
    setTestQuery(query);
  };
  
  // Handle proceeding to purchase
  const handleProceedToPurchase = () => {
    dispatch({ type: ACTION_TYPES.NEXT_STEP });
  };
  
  // If no knowledge base is selected, redirect to marketplace
  if (!state.selectedKnowledgeBase) {
    return (
      <div className="w-full max-w-6xl mx-auto p-6 text-center">
        <p className="text-gray-600 mb-4">
          No knowledge base selected. Please select a knowledge base from the marketplace.
        </p>
        <button
          className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          onClick={() => dispatch({ type: ACTION_TYPES.PREVIOUS_STEP })}
        >
          Go to Marketplace
        </button>
      </div>
    );
  }
  
  return (
    <div className="w-full max-w-7xl mx-auto p-6">
      <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
        <div>
          <h2 className="text-2xl font-bold">{state.selectedKnowledgeBase.title}</h2>
          <p className="text-gray-600">
            by {state.selectedKnowledgeBase.publisher} â€¢ {state.selectedKnowledgeBase.category}
          </p>
        </div>
        
        <div className="mt-4 md:mt-0">
          <button
            className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            onClick={handleProceedToPurchase}
          >
            Proceed to Purchase
          </button>
        </div>
      </div>
      
      {/* Tabs navigation */}
      <div className="border-b border-gray-200 mb-6">
        <nav className="-mb-px flex space-x-8" aria-label="Tabs">
          <button
            className={`${
              activeTab === 'overview'
                ? 'border-blue-500 text-blue-600'
                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
            } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}
            onClick={() => setActiveTab('overview')}
          >
            Overview
          </button>
          <button
            className={`${
              activeTab === 'test'
                ? 'border-blue-500 text-blue-600'
                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
            } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}
            onClick={() => setActiveTab('test')}
          >
            Test Knowledge Base
          </button>
          <button
            className={`${
              activeTab === 'reviews'
                ? 'border-blue-500 text-blue-600'
                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
            } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}
            onClick={() => setActiveTab('reviews')}
          >
            Reviews & Ratings
          </button>
          <button
            className={`${
              activeTab === 'pricing'
                ? 'border-blue-500 text-blue-600'
                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
            } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}
            onClick={() => setActiveTab('pricing')}
          >
            Pricing & Plans
          </button>
        </nav>
      </div>
      
      {/* Overview Tab */}
      {activeTab === 'overview' && (
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <div className="lg:col-span-2">
            <div className="bg-white rounded-lg shadow-md p-6 mb-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Description</h3>
              <p className="text-gray-600 mb-4">
                {state.selectedKnowledgeBase.description}
              </p>
              
              <h4 className="font-medium text-gray-900 mt-6 mb-2">Key Features</h4>
              <ul className="list-disc pl-5 text-gray-600 space-y-1">
                <li>Comprehensive coverage of {state.selectedKnowledgeBase.category.toLowerCase()} topics</li>
                <li>Regular updates to ensure content accuracy</li>
                <li>Structured information for accurate AI responses</li>
                <li>Proper attribution to authoritative sources</li>
                <li>Designed for seamless integration with AI systems</li>
              </ul>
              
              <h4 className="font-medium text-gray-900 mt-6 mb-2">Use Cases</h4>
              <ul className="list-disc pl-5 text-gray-600 space-y-1">
                <li>Customer support and inquiries</li>
                <li>Internal knowledge management</li>
                <li>Training and onboarding</li>
                <li>Decision support for professionals</li>
                <li>Self-service information access</li>
              </ul>
            </div>
            
            <div className="bg-white rounded-lg shadow-md p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Content Details</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-medium text-gray-700 mb-2">Content Sources</h4>
                  <ul className="list-disc pl-5 text-gray-600 space-y-1">
                    <li>Industry standard references</li>
                    <li>Professional guidelines</li>
                    <li>Expert-reviewed content</li>
                    <li>Best practices documentation</li>
                    <li>Regulatory frameworks</li>
                  </ul>
                </div>
                
                <div>
                  <h4 className="font-medium text-gray-700 mb-2">Content Structure</h4>
                  <ul className="list-disc pl-5 text-gray-600 space-y-1">
                    <li>Semantic chunking for context preservation</li>
                    <li>Cross-referenced information</li>
                    <li>Source attribution at document level</li>
                    <li>Hierarchical organization</li>
                    <li>Optimized for retrieval accuracy</li>
                  </ul>
                </div>
              </div>
              
              <div className="mt-6">
                <h4 className="font-medium text-gray-700 mb-2">Update Frequency</h4>
                <p className="text-gray-600">
                  This knowledge base is updated monthly to ensure information accuracy and currency.
                  Last updated: {state.selectedKnowledgeBase.lastUpdated}
                </p>
              </div>
            </div>
          </div>
          
          <div>
            <div className="bg-white rounded-lg shadow-md p-6 mb-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Coverage Metrics</h3>
              
              <div className="mb-4">
                <div className="flex justify-between items-center mb-1">
                  <span className="text-sm font-medium text-gray-700">Overall Coverage</span>
                  <span className="text-sm font-medium text-gray-700">{state.selectedKnowledgeBase.coverage}%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2.5">
                  <div 
                    className="bg-blue-600 h-2.5 rounded-full" 
                    style={{ width: `${state.selectedKnowledgeBase.coverage}%` }}
                  ></div>
                </div>
              </div>
              
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between items-center mb-1">
                    <span className="text-sm font-medium text-gray-700">Core Concepts</span>
                    <span className="text-sm font-medium text-gray-700">95%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div className="bg-green-500 h-2.5 rounded-full" style={{ width: '95%' }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between items-center mb-1">
                    <span className="text-sm font-medium text-gray-700">Procedures</span>
                    <span className="text-sm font-medium text-gray-700">92%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div className="bg-green-500 h-2.5 rounded-full" style={{ width: '92%' }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between items-center mb-1">
                    <span className="text-sm font-medium text-gray-700">Guidelines</span>
                    <span className="text-sm font-medium text-gray-700">90%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div className="bg-green-500 h-2.5 rounded-full" style={{ width: '90%' }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between items-center mb-1">
                    <span className="text-sm font-medium text-gray-700">Edge Cases</span>
                    <span className="text-sm font-medium text-gray-700">80%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div className="bg-yellow-500 h-2.5 rounded-full" style={{ width: '80%' }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between items-center mb-1">
                    <span className="text-sm font-medium text-gray-700">Recent Updates</span>
                    <span className="text-sm font-medium text-gray-700">85%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div className="bg-yellow-500 h-2.5 rounded-full" style={{ width: '85%' }}></div>
                  </div>
                </div>
              </div>
            </div>
            
            <div className="bg-white rounded-lg shadow-md p-6">
              <h3 className="text-lg font-medium text-gray-900 mb-4">Technical Specifications</h3>
              
              <div className="space-y-3">
                <div>
                  <span className="text-sm font-medium text-gray-700">Format:</span>
                  <span className="text-sm text-gray-600 ml-2">Vectorized Knowledge Base</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Embedding Model:</span>
                  <span className="text-sm text-gray-600 ml-2">Domain-Optimized</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Vector Dimensions:</span>
                  <span className="text-sm text-gray-600 ml-2">768</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Chunking Strategy:</span>
                  <span className="text-sm text-gray-600 ml-2">Semantic Paragraphs</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Chunk Count:</span>
                  <span className="text-sm text-gray-600 ml-2">~5,200</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Attribution Level:</span>
                  <span className="text-sm text-gray-600 ml-2">Source Document + Section</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Retrieval Optimization:</span>
                  <span className="text-sm text-gray-600 ml-2">Hybrid BM25 + Cosine Similarity</span>
                </div>
                
                <div>
                  <span className="text-sm font-medium text-gray-700">Integration:</span>
                  <span className="text-sm text-gray-600 ml-2">API, Direct Vector DB, Webhooks</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* Test Knowledge Base Tab */}
      {activeTab === 'test' && (
        <div>
          <div className="bg-white rounded-lg shadow-md p-6 mb-6">
            <h3 className="text-lg font-medium text-gray-900 mb-4">Test the Knowledge Base</h3>
            <p className="text-gray-600 mb-4">
              Ask a question to see how this knowledge base would respond. This will help you evaluate its accuracy and relevance for your needs.
            </p>
            
            {/* Example queries */}
            <div className="mb-6">
              <h4 className="text-sm font-medium text-gray-700 mb-2">Example questions to try:</h4>
              <div className="flex flex-wrap gap-2">
                {sampleQueries.map((query, index) => (
                  <button
                    key={index}
                    className="px-3 py-1.5 text-sm bg-gray-100 text-gray-800 rounded-full hover:bg-gray-200 transition-colors"
                    onClick={() => handleSampleQuery(query)}
                  >
                    {query}
                  </button>
                ))}
              </div>
            </div>
            
            {/* Query input */}
            <form onSubmit={handleSubmitQuery} className="mb-4">
              <div className="flex">
                <input
                  type="text"
                  value={testQuery}
                  onChange={(e) => setTestQuery(e.target.value)}
                  placeholder="Ask a question..."
                  className="flex-grow px-4 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  disabled={isProcessing}
                />
                <button
                  type="submit"
                  className={`px-4 py-2 rounded-r-md text-white ${
                    isProcessing || !testQuery.trim() ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600'
                  }`}
                  disabled={isProcessing || !testQuery.trim()}
                >
                  {isProcessing ? (
                    <svg className="w-5 h-5 animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                  ) : (
                    'Ask'
                  )}
                </button>
              </div>
            </form>
            
            {/* Response display */}
            {isProcessing && (
              <div className="bg-gray-50 rounded-lg p-4 mb-4">
                <div className="flex items-center text-gray-500">
                  <svg className="w-5 h-5 animate-spin mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Processing your query...
                </div>
              </div>
            )}
            
            {testResponse && (
              <div className="bg-gray-50 rounded-lg p-4">
                <div className="mb-4">
                  <h4 className="font-medium text-gray-900 mb-2">Response:</h4>
                  <p className="text-gray-700">{testResponse.text}</p>
                </div>
                
                {testResponse.sourceDocs && testResponse.sourceDocs.length > 0 && (
                  <div className="mt-4 pt-4 border-t border-gray-200">
                    <h4 className="font-medium text-gray-900 mb-2">Sources:</h4>
                    <ul className="space-y-2">
                      {testResponse.sourceDocs.map((source, index) => (
                        <li key={index} className="flex items-start">
                          <span className="text-blue-600 mr-2">â€¢</span>
                          <div>
                            <p className="font-medium text-gray-800">{source.title}</p>
                            <p className="text-sm text-gray-600">{source.section}</p>
                            <div className="mt-1 flex items-center">
                              <div className="w-16 bg-gray-200 rounded-full h-1.5 mr-2">
                                <div 
                                  className="bg-blue-600 h-1.5 rounded-full" 
                                  style={{ width: `${source.relevance * 100}%` }}
                                ></div>
                              </div>
                              <span className="text-xs text-gray-500">
                                {Math.round(source.relevance * 100)}% relevant
                              </span>
                            </div>
                          </div>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
                
                {testResponse.metadata && (
                  <div className="mt-4 pt-4 border-t border-gray-200 text-xs text-gray-500 flex flex-wrap gap-4">
                    <span>Response time: {testResponse.metadata.responseTime}</span>
                    <span>Confidence: {Math.round(testResponse.metadata.confidence * 100)}%</span>
                    <span>Tokens used: {testResponse.metadata.tokensUsed}</span>
                  </div>
                )}
              </div>
            )}
            
            <div ref={messagesEndRef} />
          </div>
          
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
            <div className="flex items-start">
              <div className="flex-shrink-0">
                <svg className="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <div className="ml-3">
                <h3 className="text-lg font-medium text-blue-800">Important Note</h3>
                <div className="mt-2 text-sm text-blue-700">
                  <p>
                    This is a preview of how the knowledge base would respond. The actual performance may vary based on your specific integration and use case. For a full assessment, you can proceed to purchase this knowledge base.
                  </p>
                </div>
                <div className="mt-4">
                  <button
                    type="button"
                    className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                    onClick={handleProceedToPurchase}
                  >
                    Proceed to Purchase
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* Reviews & Ratings Tab */}
      {activeTab === 'reviews' && (
        <div>
          <div className="bg-white rounded-lg shadow-md p-6 mb-6">
            <div className="flex flex-col md:flex-row">
              <div className="md:w-1/3 mb-6 md:mb-0 md:pr-6 md:border-r md:border-gray-200">
                <h3 className="text-lg font-medium text-gray-900 mb-4">Rating Summary</h3>
                
                <div className="flex items-center mb-6">
                  <span className="text-5xl font-bold text-gray-900 mr-4">{state.selectedKnowledgeBase.rating}</span>
                  <div>
                    <div className="flex items-center">
                      <div className="flex text-yellow-400">
                        {[...Array(5)].map((_, i) => (
                          <svg 
                            key={i} 
                            className="h-5 w-5" 
                            fill={i < Math.floor(state.selectedKnowledgeBase.rating) ? "currentColor" : "none"}
                            stroke="currentColor" 
                            viewBox="0 0 24 24" 
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path 
                              strokeLinecap="round" 
                              strokeLinejoin="round" 
                              strokeWidth="2" 
                              d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                            ></path>
                          </svg>
                        ))}
                      </div>
                      <span className="ml-2 text-sm text-gray-500">{state.selectedKnowledgeBase.reviews} reviews</span>
                    </div>
                    <p className="text-sm text-gray-500 mt-1">Overall rating</p>
                  </div>
                </div>
                
                <div className="space-y-2">
                  <div>
                    <div className="flex items-center">
                      <span className="text-sm font-medium text-gray-700 w-24">Accuracy</span>
                      <div className="w-full bg-gray-200 rounded-full h-2 mr-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{ width: '88%' }}></div>
                      </div>
                      <span className="text-sm font-medium text-gray-700">4.4</span>
                    </div>
                  </div>
                  
                  <div>
                    <div className="flex items-center">
                      <span className="text-sm font-medium text-gray-700 w-24">Completeness</span>
                      <div className="w-full bg-gray-200 rounded-full h-2 mr-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{ width: '90%' }}></div>
                      </div>
                      <span className="text-sm font-medium text-gray-700">4.5</span>
                    </div>
                  </div>
                  
                  <div>
                    <div className="flex items-center">
                      <span className="text-sm font-medium text-gray-700 w-24">Relevance</span>
                      <div className="w-full bg-gray-200 rounded-full h-2 mr-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{ width: '94%' }}></div>
                      </div>
                      <span className="text-sm font-medium text-gray-700">4.7</span>
                    </div>
                  </div>
                  
                  <div>
                    <div className="flex items-center">
                      <span className="text-sm font-medium text-gray-700 w-24">Clarity</span>
                      <div className="w-full bg-gray-200 rounded-full h-2 mr-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{ width: '92%' }}></div>
                      </div>
                      <span className="text-sm font-medium text-gray-700">4.6</span>
                    </div>
                  </div>
                  
                  <div>
                    <div className="flex items-center">
                      <span className="text-sm font-medium text-gray-700 w-24">Value</span>
                      <div className="w-full bg-gray-200 rounded-full h-2 mr-2">
                        <div className="bg-blue-600 h-2 rounded-full" style={{ width: '86%' }}></div>
                      </div>
                      <span className="text-sm font-medium text-gray-700">4.3</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="md:w-2/3 md:pl-6">
                <h3 className="text-lg font-medium text-gray-900 mb-4">Customer Reviews</h3>
                
                <div className="space-y-6">
                  <div className="border-b border-gray-200 pb-6">
                    <div className="flex items-center mb-2">
                      <div className="flex text-yellow-400">
                        {[...Array(5)].map((_, i) => (
                          <svg 
                            key={i} 
                            className="h-5 w-5" 
                            fill={i < 5 ? "currentColor" : "none"}
                            stroke="currentColor" 
                            viewBox="0 0 24 24" 
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path 
                              strokeLinecap="round" 
                              strokeLinejoin="round" 
                              strokeWidth="2" 
                              d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                            ></path>
                          </svg>
                        ))}
                      </div>
                      <span className="ml-2 text-sm text-gray-500">1 week ago</span>
                    </div>
                    <h4 className="font-medium text-gray-900">Exceeds expectations for accuracy</h4>
                    <p className="text-gray-600 mt-2">
                      This knowledge base has transformed our customer support operations. The accuracy of responses is impressive, and the coverage of industry-specific topics is comprehensive. Integration was straightforward, and we've seen a significant improvement in response quality.
                    </p>
                    <div className="mt-2 text-sm text-gray-500">
                      <span className="font-medium">John D.</span> - Enterprise Customer
                    </div>
                  </div>
                  
                  <div className="border-b border-gray-200 pb-6">
                    <div className="flex items-center mb-2">
                      <div className="flex text-yellow-400">
                        {[...Array(5)].map((_, i) => (
                          <svg 
                            key={i} 
                            className="h-5 w-5" 
                            fill={i < 4 ? "currentColor" : "none"}
                            stroke="currentColor" 
                            viewBox="0 0 24 24" 
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path 
                              strokeLinecap="round" 
                              strokeLinejoin="round" 
                              strokeWidth="2" 
                              d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                            ></path>
                          </svg>
                        ))}
                      </div>
                      <span className="ml-2 text-sm text-gray-500">3 weeks ago</span>
                    </div>
                    <h4 className="font-medium text-gray-900">Great value, some gaps in specialized areas</h4>
                    <p className="text-gray-600 mt-2">
                      Overall, this knowledge base has been a valuable addition to our AI capabilities. The content is well-structured and the attribution to sources is excellent. There are some gaps in specialized topics, but the publisher has been responsive to feedback and regularly updates the content.
                    </p>
                    <div className="mt-2 text-sm text-gray-500">
                      <span className="font-medium">Sarah M.</span> - Mid-sized Business
                    </div>
                  </div>
                  
                  <div>
                    <div className="flex items-center mb-2">
                      <div className="flex text-yellow-400">
                        {[...Array(5)].map((_, i) => (
                          <svg 
                            key={i} 
                            className="h-5 w-5" 
                            fill={i < 5 ? "currentColor" : "none"}
                            stroke="currentColor" 
                            viewBox="0 0 24 24" 
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path 
                              strokeLinecap="round" 
                              strokeLinejoin="round" 
                              strokeWidth="2" 
                              d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                            ></path>
                          </svg>
                        ))}
                      </div>
                      <span className="ml-2 text-sm text-gray-500">1 month ago</span>
                    </div>
                    <h4 className="font-medium text-gray-900">Perfect for our use case</h4>
                    <p className="text-gray-600 mt-2">
                      We integrated this knowledge base with our customer portal, and the results have been outstanding. Our customers are getting accurate, detailed answers to their questions, and our support team can focus on more complex issues. The regular updates ensure that the information stays current and relevant.
                    </p>
                    <div className="mt-2 text-sm text-gray-500">
                      <span className="font-medium">Michael R.</span> - Technology Sector
                    </div>
                  </div>
                </div>
                
                <div className="mt-6">
                  <button
                    type="button"
                    className="text-sm text-blue-600 hover:text-blue-800"
                  >
                    View all {state.selectedKnowledgeBase.reviews} reviews
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* Pricing & Plans Tab */}
      {activeTab === 'pricing' && (
        <div>
          <div className="bg-white rounded-lg shadow-md p-6 mb-6">
            <h3 className="text-lg font-medium text-gray-900 mb-4">Pricing Options</h3>
            <p className="text-gray-600 mb-6">
              Choose the plan that best fits your needs. All plans include the same high-quality knowledge base content.
            </p>
            
            <div className="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
              <div className="border rounded-lg shadow-sm overflow-hidden">
                <div className="p-6">
                  <h3 className="text-lg font-medium text-gray-900">Monthly Subscription</h3>
                  <div className="mt-4 flex items-baseline">
                    <span className="text-3xl font-bold tracking-tight text-gray-900">${state.selectedKnowledgeBase.price.monthly}</span>
                    <span className="text-sm font-medium text-gray-500">/month</span>
                  </div>
                  <p className="mt-1 text-sm text-gray-500">Billed monthly, cancel anytime</p>
                  
                  <ul className="mt-6 space-y-3">
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Monthly content updates</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">API Access</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Email support</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Up to 100,000 queries/month</span>
                    </li>
                  </ul>
                  
                  <div className="mt-8">
                    <button
                      type="button"
                      className="w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                      onClick={handleProceedToPurchase}
                    >
                      Select Monthly Plan
                    </button>
                  </div>
                </div>
              </div>
              
              <div className="border rounded-lg shadow-sm overflow-hidden ring-2 ring-blue-500">
                <div className="p-6">
                  <h3 className="text-lg font-medium text-gray-900">Annual Subscription</h3>
                  <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mt-1">
                    Most Popular
                  </span>
                  <div className="mt-4 flex items-baseline">
                    <span className="text-3xl font-bold tracking-tight text-gray-900">${Math.round(state.selectedKnowledgeBase.price.annual / 12)}</span>
                    <span className="text-sm font-medium text-gray-500">/month</span>
                  </div>
                  <p className="mt-1 text-sm text-gray-500">${state.selectedKnowledgeBase.price.annual} billed annually (save {Math.round((1 - (state.selectedKnowledgeBase.price.annual / (state.selectedKnowledgeBase.price.monthly * 12))) * 100)}%)</p>
                  
                  <ul className="mt-6 space-y-3">
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Monthly content updates</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">API Access</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Priority email support</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Up to 500,000 queries/month</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Custom integration support</span>
                    </li>
                  </ul>
                  
                  <div className="mt-8">
                    <button
                      type="button"
                      className="w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                      onClick={handleProceedToPurchase}
                    >
                      Select Annual Plan
                    </button>
                  </div>
                </div>
              </div>
              
              <div className="border rounded-lg shadow-sm overflow-hidden">
                <div className="p-6">
                  <h3 className="text-lg font-medium text-gray-900">One-Time Purchase</h3>
                  <div className="mt-4 flex items-baseline">
                    <span className="text-3xl font-bold tracking-tight text-gray-900">${state.selectedKnowledgeBase.price.oneTime}</span>
                  </div>
                  <p className="mt-1 text-sm text-gray-500">One-time payment, no recurring fees</p>
                  
                  <ul className="mt-6 space-y-3">
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Current version only (no updates)</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">API Access</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Email support (30 days)</span>
                    </li>
                    <li className="flex items-start">
                      <svg className="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7"></path>
                      </svg>
                      <span className="text-sm text-gray-700">Unlimited queries</span>
                    </li>
                  </ul>
                  
                  <div className="mt-8">
                    <button
                      type="button"
                      className="w-full px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                      onClick={handleProceedToPurchase}
                    >
                      Buy One-Time License
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div className="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 className="text-lg font-medium text-gray-900 mb-4">Additional Information</h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <h4 className="font-medium text-gray-700 mb-2">Enterprise Options</h4>
                <p className="text-gray-600 text-sm">
                  For enterprise needs with higher query volumes, custom integrations, or dedicated support, please contact our sales team for a custom quote.
                </p>
                <button className="mt-2 text-sm text-blue-600 hover:text-blue-800">
                  Contact Sales
                </button>
              </div>
              
              <div>
                <h4 className="font-medium text-gray-700 mb-2">License Terms</h4>
                <p className="text-gray-600 text-sm">
                  All plans include a license for use with a single AI deployment. Multiple deployments require additional licenses. See our license agreement for full details.
                </p>
                <button className="mt-2 text-sm text-blue-600 hover:text-blue-800">
                  View License Agreement
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* Action buttons */}
      <div className="mt-8 flex justify-between">
        <button 
          className="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          onClick={() => dispatch({ type: ACTION_TYPES.PREVIOUS_STEP })}
        >
          Back to Marketplace
        </button>
        
        <button 
          className="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          onClick={handleProceedToPurchase}
        >
          Proceed to Purchase
        </button>
      </div>
    </div>
  );
};

export default KnowledgeBaseEvaluation;
